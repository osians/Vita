<manual>
    title       : Class SYS_Db , DBFactory e MySQLProvider
    Category    : Database, MySQL, SQLite, Sys

    Description : O arquivo sys_db contém classes responsáveis por fazer a interface com o banco de dados,
    no caso, o padrao é o uso com mysql, porém, podendo ser usado com SQlite.
    Além do mais, outras interfaces podem ser adicionadas de forma simples.
    Esta classe também é instanciada automaticamente e pode ser acessada através da função <b>vita()</b>, seus métodos podem ser acessados utilizando o caminho <b>vita()->db->metodo([params]);</b> ou <b>vita()->database->metodo([params]);</b>

    usage:
        ...

        // exemplo 1 (Usando valores Default, definidos no arquivo de Config)
        $database = DBFactory::create( 'MySQL' );

        // exemplo 2 (definindo valores manualmente )
        $database = DBFactory::create( 'MySQL',
            array('host' => '127.0.0.1','port' => '3306','user' =>
                'wandeco','pass' => 'sans','dbname' => 'nome_banco_dados')
        );

        // exemplo 3 (Usando valores Default, definidos no arquivo de Config)
        $database = DBFactory::create( 'SQLite' );

        // exemplo 4 (definindo valores manualmente )
        $database = DBFactory::create( 'SQLite',
            array(
                'dbpath' => '/caminho/arquivo/',
                'dbname' => 'database.sqlite'
        ));

        // note que o processo acima não é necessário, apenas esta aqui para fins ilustrativos
        // Inserindo registros usando o vita - Netodo 1
        vita()->database->query( 'INSERT INTO mytable (FName, LName, Age, Gender)
        VALUES (:fname, :lname, :age, :gender)' );

        vita()->database->bind(':fname', 'John');
        vita()->database->bind(':lname', 'Smith');
        vita()->database->bind(':age', '24');
        vita()->database->bind(':gender', 'male');

        vita()->database->execute();

        echo vita()->database->lastInsertId();

        // Inserindo registros - Metodo 2
        $lid = vita()->database->insert(
            'INSERT INTO mytable (FName, LName, Age, Gender) VALUES (:fname, :lname, :age, :gender)',
            array(':fname' => 'John',':lname'=>'Smith',':age','24',':gender'=>'male'), true );

        echo "Ultimo registro inserido: " .$lid ;


        // Realizando um select - Metodo 01
        vita()->database->query( 'SELECT FName, LName, Age, Gender
        FROM mytable
        WHERE FName = :fname');

        vita()->database->bind(':fname', 'Jenny');
        $row = vita()->database->single();

        // Realizando um select - Metodo 02
        // @param string - SQL Query a executar
        // @param array  - variaveis Bind
        // @param bool   - retornar resultado como Objeto ou Array ? true = objeto
        // @param bool   - retornar apenas primeiro resultado? true = Sim
        $rs = vita()->database->select(
        'SELECT FName, LName, Age, Gender FROM mytable WHERE FName = :fname',
        array(':fname' => 'Constantine'), true, false
        );

</manual>
